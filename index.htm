<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <title>Spaceward</title>
    <link rel="stylesheet" type="text/css" href="styles.css"> 
    <style>
        body {
            font-family: Arial, sans-serif;
            margin: 0;
            padding: 0;
            background-color: #f5f5f5;
        }

        header {
            background-color: #333;
            color: white;
            padding: 10px;
            text-align: center;
        }

        nav {
            background-color: #444;
            color: white;
            text-align: center;
            padding: 10px;
        }

        nav a {
            color: white;
            text-decoration: none;
            margin: 0 10px;
        }

        nav a:hover {
            text-decoration: underline;
        }

        .content {
            padding: 20px;
        }

        .content h2 {
            color: #333;
        }

        .content p {
            color: #666;
            line-height: 1.5;
        }

        .image-gallery {
            display: flex;
            justify-content: space-between;
        }

        .image-gallery img {
            width: 30%; 
            border: 2px solid #ccc;
            border-radius: 5px;
        }

        footer {
            background-color: #E2E1E1;
            color: white;
            text-align: center;
            padding: 10px;
        }
    </style>
</head>
<body>

<header>
    <h1>Spaceward</h1>
</header>

<div class="content">
    <h2>About the Game</h2>
    <p>
        "Spaceward" revolves around a young engineer with dreams of exploring the universe! However, her airship isn't
	built for such a task and therefore must make the necessary improvements to it by finding the gears left in this
	Steampunk-esque floating island. With the use of her jetpack, which can grant her new abilities by finding the
	necessary batteries, getting the gears required will be a cinch!
    </p>

    <h2>My Role</h2>
    <p>
        I served as the "team lead" for our group of seven. As I was on the Tech Team, I also served as one of the game
        logic programmers as well as a level designer.
    </p>

    <h2>Challenges in Development</h2>
    <p>
        One of the major hurdles I had was getting used to Blueprint coding, and determining which "prop" to assign the
        blueprint to. This became more difficult when adding interface and widget blueprints, which took me a good amount
        of time to figure out. 

        Blueprinting was especially a pain for the animations of our unlockable abilities (double jump and dash), 
        which required the engine to only play the animations when the specific ability was unlocked. This became an 
        issue for the double jump, as an annoying bug was that the DJ animation were to play during every jump until 
        the player unlocked the ability because of the way it was orignally programmed.

        Our main goal was to make a more relaxed platformer, but also not make it too boring, so possibly our biggest
        challenge was to account for all levels of skill regarding platformer games. This also played a part in where we
        hid some of the batteries, as we wanted players to have enough options regarding batteriesto get the additional 
        abilities without feeling forced to get all of them.
    </p>

    <h2>Version Control</h2>
    <p>
        Our main Version Control for this project was Git which was facilitated by the use of GitHub Desktop, which our
        entire team used.

        Like other teams, we originally had issues with merging conflicts because of how Git managed blueprints. The main
        issue was if more than one person modified a blueprint file, then on a branch merge Git would spit out a conflict.
        This was especially annoying at the beginning of the class until the Alpha period where we were still getting used
        to UE5 Blueprints. 
    </p>

    <h2>What I Learned From These Challenges</h2>
    <p>
        One of the more important lessons, obviously, was how to more effectively use the tools that Unreal had given me,
        which, of course, included Blueprinting. I also grew to appreciate Unreal as an engine, even if it can certainly
        be frustrating to work with. 

        Team management is especially important for using Git, as it can be easy to overwrite another person's progress
        or create merging issues. Having a spreadsheet or at least communicating who is working on what is especially
        important for ensuring a smooth development process.
    </p>
</div>

</body>
</html>
